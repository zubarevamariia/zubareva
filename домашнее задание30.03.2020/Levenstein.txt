#include <iostream>
using namespace std;
int Levenstein(string clovo1, string clovo2, int InsertCost, int DeleteCost, int ReplaceCost)
{
int A=clovo1.size();
int B=clovo2.size();
int C[A+1][B+1];
C[0][0]=0;
for(int j=1;j<B+1;++j)
{
C[0][j] = C[0][j-1]+InsertCost;
}
for (int i = 1;i<A+1;++i)
{
C[i][0] = C[i - 1][0] + DeleteCost;
for (int j=1;j<A+1;++j)
{
if (clovo1[i-1] != clovo2[j-1])
{
C[i][j]=min(C[i-1][j]+DeleteCost,min(
C[i][j-1]+InsertCost,
C[i-1][j-1]+ReplaceCost));
}
else
{
C[i][j] = C[i-1][j-1];
}
}
}
return C[A][B];
}
int main() {
string clovo1;
string clovo2;
int DeleteCost=1;
int InsertCost=1;
int ReplaceCost=1;
cin>>clovo1>>clovo2;
cout<<Levenstein(clovo1,clovo2,InsertCost,DeleteCost,ReplaceCost);
return 0;
}